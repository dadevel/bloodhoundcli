services:
  postgres:
    image: docker.io/library/postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ''
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DATABASE: postgres
    volumes:
    - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -h 127.0.0.1 -p 5432 -U postgres -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
    - default

  neo4j:
    image: ghcr.io/dadevel/neo4j:4.4.12
    environment:
      NEO4J_AUTH: none
      NEO4J_dbms_allow__upgrade: 'true'
    ports:
    - 127.0.0.1:7687:7687
    - 127.0.0.1:7474:7474
    volumes:
    - neo4j-data:/data
    healthcheck:
      test:
      - CMD-SHELL
      - wget -O /dev/null -q http://localhost:7474
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
    - default

  bloodhound:
    image: docker.io/specterops/bloodhound:7.4.1
    ports:
    - 127.0.0.1:7575:8080
    volumes:
    - ./bloodhound.config.json:/bloodhound.config.json:ro
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
    - default

volumes:
  postgres-data:
  neo4j-data:

networks:
  default:
    internal: true
